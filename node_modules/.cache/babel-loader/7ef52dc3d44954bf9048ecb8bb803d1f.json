{"remainingRequest":"C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\src\\views\\employees\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\src\\views\\employees\\index.vue","mtime":1656405552788},{"path":"C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\babel.config.js","mtime":1655089325320},{"path":"C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655089562873},{"path":"C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\node_modules\\babel-loader\\lib\\index.js","mtime":1655089564691},{"path":"C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655089562873},{"path":"C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\node_modules\\vue-loader\\lib\\index.js","mtime":1655089565085}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACA,mF,CACA;;AACA,oD,CACA;;AACA,uC,CACA;;AACA;AACA;EACAA,iBADA;EAEAC;IACAC;EADA,CAFA;EAKAC,IALA,kBAKA;IACA;MACAC,cADA;MAEA;MACAC,QAHA;MAIAC;QACA;QACAA,OAFA;QAGA;QACAC,QAJA;QAKA;QACAC;MANA,CAJA;MAYA;MACAC;IAbA;EAeA,CArBA;EAsBAC,4BACAC,YACA,MADA,EADA,CAtBA;EA2BAC,OA3BA,qBA2BA;IACA;EACA,CA7BA;EA8BAC;IACAC,eADA,6BACA;MAAA;;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBACA,qBADA,CAEA;;gBAFA;gBAAA,OAGAA,4BAHA;;cAAA;gBAAA;gBAGAN,KAHA,yBAGAA,KAHA;gBAGAO,IAHA,yBAGAA,IAHA;gBAIA;gBACA;gBACA;;cANA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAOA,CARA;IASAC,UATA,sBASAC,OATA,EASA;MACA;MACA;IACA,CAZA;IAaA;IACAC,gBAdA,4BAcAC,GAdA,EAcAC,MAdA,EAcAC,SAdA,EAcAC,KAdA,EAcA;MACA;MACA;QAAA;MAAA;MACA;IACA,CAlBA;IAmBA;IACAC,cApBA,0BAoBAC,EApBA,EAoBA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAGA,4BAHA;;cAAA;gBAAA;gBAAA,OAKAC,eALA;;cAAA;gBAMA;gBACA,yBAPA,CAQA;;;gBACA;;gBATA;gBAAA;;cAAA;gBAAA;gBAAA;gBAWAC;;cAXA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAaA,CAjCA;IAkCA;IACAC,UAnCA,wBAmCA;MAAA;;MACA;MACA;QACA,gBADA;QAEA,eAFA;QAGA,qBAHA;QAIA,0BAJA;QAKA,wBALA;QAMA,kBANA;QAOA;MAPA;MASA;QAAA;MAAA;QAAA;UAAA;;UAAA;YAAA;cAAA;gBAAA;kBAAA;kBAAA,OAEAb;oBAAAR;oBAAAC;kBAAA,EAFA;;gBAAA;kBAAA;kBAEAQ,IAFA,0BAEAA,IAFA;kBAGA;kBACA;kBACA;kBACAa,WANA,GAMA,sCANA,EAOA;;kBACAC,MARA,GAQA,2BARA,EASA;;kBACAC;oBACAC,iBADA;oBAEAC,4BAFA;oBAGA7B,sCAHA;oBAIAyB,wBAJA;oBAIA;oBACAC,cALA,CAKA;;kBALA;;gBAVA;gBAAA;kBAAA;cAAA;YAAA;UAAA;QAAA;;QAAA;UAAA;QAAA;MAAA;IAkBA,CAhEA;IAiEA;IACA;IACA;IACAI,UApEA,sBAoEAC,OApEA,EAoEAnB,IApEA,EAoEA;MACA;MACA;QACA;QACA;QACA;QACA;UACA;UACA;YACA;UACA,CAFA,MAEA;YACA;YACA;YACA;cAAA;YAAA,GAHA,CAIA;;YACA;UACA;;UACA;QACA,CAZA;MAaA,CAjBA;IAkBA;EAxFA;AA9BA","names":["name","components","AddEmployee","data","loading","list","page","size","total","showDialog","computed","mapGetters","created","methods","getEmployeeList","rows","changePage","newPage","formatEmployment","row","column","cellValue","index","deleteEmployee","id","delEmployee","console","exportData","multiHeader","merges","excel","filename","header","formatJSON","headers"],"sourceRoot":"src/views/employees","sources":["index.vue"],"sourcesContent":["\r\n<template>\r\n  <div class=\"dashboard-container\">\r\n    <div class=\"app-container\">\r\n      <page-tools :show-before=\"true\">\r\n        <span slot=\"before\">一共有{{ page.total }}条数据</span>\r\n        <template slot=\"after\">\r\n          <el-button size=\"small\" type=\"success\" @click=\"$router.push('/import')\">导入</el-button>\r\n          <el-button size=\"small\" type=\"danger\" @click=\"exportData\">导出</el-button>\r\n          <el-button size=\"small\" type=\"primary\" @click=\"showDialog = true\">新增员工</el-button>\r\n        </template>\r\n      </page-tools>\r\n      <!-- 放置表格和分页 -->\r\n      <el-card v-loading=\"loading\">\r\n        <el-table border :data=\"list\">\r\n          <el-table-column label=\"序号\" sortable=\"\" type=\"index\" />\r\n          <el-table-column label=\"姓名\" sortable=\"\" prop=\"username\" />\r\n          <el-table-column label=\"工号\" sortable=\"\" prop=\"workNumber\" />\r\n          <el-table-column label=\"聘用形式\" sortable=\"\" prop=\"formOfEmployment\" :formatter=\"formatEmployment\" />\r\n\r\n          <el-table-column label=\"部门\" sortable=\"\" prop=\"departmentName\" />\r\n          <el-table-column label=\"入职时间\" sortable=\"\" prop=\"timeOfEntry\" align=\"center\">\r\n            <template slot-scope=\"{ row }\">{{ row.timeOfEntry | formatDate }}</template>\r\n          </el-table-column>\r\n          <el-table-column label=\"账户状态\" align=\"center\" sortable=\"\" prop=\"enableState\">\r\n            <template slot-scope=\"{ row }\">\r\n              <!-- 根据当前状态来确定 是否打开开关 -->\r\n              <el-switch :value=\"row.enableState === 1\" />\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"操作\" sortable=\"\" fixed=\"right\" width=\"280\">\r\n            <template slot-scope=\"{row}\">\r\n              <el-button type=\"text\" size=\"small\" @click=\"$router.push(`/employees/detail/${obj.row.id}`)\">查看</el-button>\r\n              <el-button type=\"text\" size=\"small\">转正</el-button>\r\n              <el-button type=\"text\" size=\"small\">调岗</el-button>\r\n              <el-button type=\"text\" size=\"small\">离职</el-button>\r\n              <el-button type=\"text\" size=\"small\">角色</el-button>\r\n              <el-button type=\"text\" size=\"small\" @click=\"deleteEmployee(row.id)\">删除</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        <!-- 分页组件 -->\r\n        <el-row type=\"flex\" justify=\"center\" align=\"middle\" style=\"height: 60px\">\r\n          <el-pagination\r\n            layout=\"prev, pager, next\"\r\n            :page-size=\"page.size\"\r\n            :current-page=\"page.page\"\r\n            :total=\"page.total\"\r\n            @current-change=\"changePage\"\r\n          />\r\n        </el-row>\r\n      </el-card>\r\n    </div>\r\n    <!--sync修饰符，是子组件去改变父组件数据的一个语法糖  -->\r\n    <add-employee :show-dialog.sync=\"showDialog\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\nimport { getEmployeeList, delEmployee } from '@/api/employees'\r\n// 引入新增员工\r\nimport AddEmployee from './components/add-employee'\r\n// 格式化时间\r\nimport { formatDate } from '@/filters'\r\n// 格式化聘用形式\r\nimport EmployeeEnum from '@/api/constant/employees'\r\nexport default {\r\n  name: 'Dashboard',\r\n  components: {\r\n    AddEmployee\r\n  },\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      // 接受员工数据\r\n      list: [],\r\n      page: {\r\n        // 当前页码\r\n        page: 1,\r\n        // 每页数据的数量\r\n        size: 10,\r\n        // 页面总数\r\n        total: 0\r\n      },\r\n      // 控制弹出层\r\n      showDialog: false\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      'name'\r\n    ])\r\n  },\r\n  created() {\r\n    this.getEmployeeList()\r\n  },\r\n  methods: {\r\n    async getEmployeeList() {\r\n      this.loading = true\r\n      // 获取当前页码数\r\n      const { total, rows } = await getEmployeeList(this.page)\r\n      this.page.total = total\r\n      this.list = rows\r\n      this.loading = false\r\n    },\r\n    changePage(newPage) {\r\n      this.page.page = newPage\r\n      this.getEmployeeList()\r\n    },\r\n    // 页面数，行数，聘用形式，\r\n    formatEmployment(row, column, cellValue, index) {\r\n      // 要去找 1所对应的值\r\n      const obj = EmployeeEnum.hireType.find(item => item.id === cellValue)\r\n      return obj ? obj.value : '未知'\r\n    },\r\n    // 删除员工\r\n    async deleteEmployee(id) {\r\n      try {\r\n        // 确认消息\r\n        await this.$confirm('您确定删除该员工吗')\r\n        // 删除信息\r\n        await delEmployee(id)\r\n        // 重新获取\r\n        this.getEmployeeList()\r\n        // 提示信息\r\n        this.$message.success('删除员工成功')\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    },\r\n    // 导出数据\r\n    exportData() {\r\n      // 懒加载模块 => 只有当点击按钮的时候才去加载这个模块\r\n      const headers = {\r\n        '姓名': 'username',\r\n        '手机号': 'mobile',\r\n        '入职日期': 'timeOfEntry',\r\n        '聘用形式': 'formOfEmployment',\r\n        '转正日期': 'correctionTime',\r\n        '工号': 'workNumber',\r\n        '部门': 'departmentName'\r\n      }\r\n      import('@/vendor/Export2Excel').then(async excel => {\r\n        // 获取所有的员工列表数据\r\n        const { rows } = await getEmployeeList({ page: 1, size: this.page.total })\r\n        // rows是所有的员工列表数据\r\n        // [{ username: '张三', mobile: 123 }]  => [[ '张三', 123 ]]\r\n        // 复杂表头\r\n        const multiHeader = [['姓名', '主要信息', '', '', '', '', '部门']]\r\n        // 合并行\r\n        const merges = ['A1:A2', 'B1:F1', 'G1:G2']\r\n        // excel导出的默认对象\r\n        excel.export_json_to_excel({\r\n          filename: '人力资源表',\r\n          header: Object.keys(headers),\r\n          data: this.formatJSON(headers, rows),\r\n          multiHeader, // 复杂表头\r\n          merges// 合并行\r\n        })\r\n      })\r\n    },\r\n    // [{ username: '张三', mobile: 123 }]  => [[ '张三', 123 ]]\r\n    // 数据的顺序是按照headers中key的顺序来的\r\n    // 格式化json数据\r\n    formatJSON(headers, rows) {\r\n      // rows 是一行一行的  =>  [{},{}] => [[],[]]\r\n      return rows.map(item => {\r\n        // item {username: '张三', mobile: 123}  现在是对象 => []\r\n        // [\"姓名\",\"手机号\"] => [ '张三', '123']\r\n        // 解剖开一层后，里面藏的是{}对象\r\n        return Object.keys(headers).map(key => {\r\n          // 格式化时间\r\n          if (headers[key] === 'timeOfEntry' || headers[key] === 'correctionTime') {\r\n            return formatDate(item[headers[key]])\r\n          } else if (headers[key] === 'formOfEmployment') {\r\n            // 格式化聘用形式\r\n            // 这里会有变量重复问题\r\n            const obj = EmployeeEnum.hireType.find(obj => obj.id === item[headers[key]])\r\n            // 寻找聘用形式对应的文本内容\r\n            return obj ? obj.value : '未知'\r\n          }\r\n          return item[headers[key]]\r\n        })\r\n      })\r\n    }\r\n  }}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n"]}]}