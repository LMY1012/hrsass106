{"remainingRequest":"C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\src\\views\\departments\\components\\add-dept.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\src\\views\\departments\\components\\add-dept.vue","mtime":1656300405004},{"path":"C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655089562873},{"path":"C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\node_modules\\babel-loader\\lib\\index.js","mtime":1655089564691},{"path":"C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655089562873},{"path":"C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\node_modules\\vue-loader\\lib\\index.js","mtime":1655089565085}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBnZXREZXBhcnRtZW50cywgYWRkRGVwYXJ0bWVudHMsIGdldERlcGFydERldGFpbCwgdXBkYXRlRGVwYXJ0bWVudHMgfSBmcm9tICdAL2FwaS9kZXBhcnRtZW50cycNCmltcG9ydCB7IGdldEVtcGxveWVlU2ltcGxlIH0gZnJvbSAnQC9hcGkvZW1wbG95ZWVzJw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIHByb3BzOiB7DQogICAgc2hvd0RpYWxvZzogew0KICAgICAgdHlwZTogQm9vbGVhbiwNCiAgICAgIGRlZmF1bHQ6IGZhbHNlDQogICAgfSwNCiAgICB0cmVlTm9kZTogew0KICAgICAgdHlwZTogT2JqZWN0LA0KICAgICAgZGVmYXVsdDogbnVsbA0KICAgIH0NCiAgfSwNCiAgZGF0YSgpIHsNCiAgICBjb25zdCBjaGVja05hbWVSZXBlYXQgPSBhc3luYyhydWxlLCB2YWx1ZSwgY2FsbGJhY2spID0+IHsNCiAgICAgIC8vIOagoemqjOmAu+i+kSDlkIznuqfpg6jpl6jkuI3og73lh7rnjrDph43lpI3nmoTlkI3np7ANCiAgICAgIC8vIOiOt+WPluacgOaWsOeahOe7hOe7h+aetuaehOaVsOaNrg0KICAgICAgY29uc3QgeyBkZXB0cyB9ID0gYXdhaXQgZ2V0RGVwYXJ0bWVudHMoKQ0KICAgICAgLy8gIOajgOafpemHjeWkjeinhOWImSDpnIDopoHmlK/mjIHkuKTnp40g5paw5aKe5qih5byPIC8g57yW6L6R5qih5byPDQogICAgICAvLyBkZXB0c+aYr+aJgOacieeahOmDqOmXqOaVsOaNrg0KICAgICAgLy8g5aaC5L2V5Y675om+5oqA5pyv6YOo5omA5pyJ55qE5a2Q6IqC54K5DQogICAgICBsZXQgaXNSZXBlYXQgPSBmYWxzZQ0KICAgICAgaWYgKHRoaXMuZm9ybURhdGEuaWQpIHsNCiAgICAgICAgLy8g57yW6L6RDQogICAgICAgIC8vIOaJvuWIsOiHquW3seW9k+WJjemDqOmXqOeahOaJgOacieeahOWQjOe6p+mDqOmXqA0KICAgICAgICBpc1JlcGVhdCA9IGRlcHRzLmZpbHRlcihpdGVtID0+IGl0ZW0ucGlkID09PSB0aGlzLmZvcm1EYXRhLnBpZCAmJiBpdGVtLmlkICE9PSB0aGlzLmZvcm1EYXRhLmlkKS5zb21lKGl0ZW0gPT4gaXRlbS5uYW1lID09PSB2YWx1ZSkNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIC8vIOaWsOWinuWcuuaZrw0KICAgICAgICBpc1JlcGVhdCA9IGRlcHRzLmZpbHRlcihpdGVtID0+IGl0ZW0ucGlkID09PSB0aGlzLnRyZWVOb2RlLmlkKS5zb21lKGl0ZW0gPT4gaXRlbS5uYW1lID09PSB2YWx1ZSkNCiAgICAgIH0NCiAgICAgIC8vIGRlcHRz5piv5omA5pyJ55qE5pWw5o2uDQogICAgICAvLyDluILlnLrpg6jmiYDmnInnmoTlrZDpg6jpl6jnmoQgcGlkIOetieS6juW4guWcuumDqOeahGlkICDluILlnLrpg6jnmoTmlbDmja7nmoR0cmVlTm9kZS5pZA0KICAgICAgaXNSZXBlYXQgPyBjYWxsYmFjayhuZXcgRXJyb3IoYOWQjOe6p+mDqOmXqOS4i+W3sue7j+aciSR7dmFsdWV96L+Z5Liq6YOo6Zeo5LqGYCkpIDogY2FsbGJhY2soKQ0KICAgIH0NCiAgICBjb25zdCBjaGVja0NvZGVSZXBlYXQgPSBhc3luYyhydWxlLCB2YWx1ZSwgY2FsbGJhY2spID0+IHsNCiAgICAgIC8vIOiOt+WPluacgOaWsOeahOe7hOe7h+aetuaehOaVsOaNrg0KICAgICAgY29uc3QgeyBkZXB0cyB9ID0gYXdhaXQgZ2V0RGVwYXJ0bWVudHMoKQ0KICAgICAgbGV0IGlzUmVwZWF0ID0gZmFsc2UNCiAgICAgIGlmICh0aGlzLmZvcm1EYXRhLmlkKSB7DQogICAgICAgIC8vIOe8lui+kQ0KICAgICAgICBpc1JlcGVhdCA9IGRlcHRzLmZpbHRlcihpdGVtID0+IGl0ZW0uaWQgIT09IHRoaXMuZm9ybURhdGEuaWQpLnNvbWUoaXRlbSA9PiBpdGVtLmNvZGUgPT09IHZhbHVlKQ0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgaXNSZXBlYXQgPSBkZXB0cy5zb21lKGl0ZW0gPT4gaXRlbS5jb2RlID09PSB2YWx1ZSkgLy8g5Y+q6KaB5Y+R546w57yW56CB6YeN5aSNIOWwseS4jeihjA0KICAgICAgfQ0KICAgICAgaXNSZXBlYXQgPyBjYWxsYmFjayhuZXcgRXJyb3IoYOW3sue7j+aciSR7dmFsdWV96L+Z5Liq57yW56CB5LqGYCkpIDogY2FsbGJhY2soKQ0KICAgIH0NCiAgICByZXR1cm4gew0KICAgICAgZm9ybURhdGE6IHsNCiAgICAgICAgbmFtZTogJycsIC8vIOmDqOmXqOWQjeensA0KICAgICAgICBjb2RlOiAnJywgLy8g6YOo6Zeo57yW56CBDQogICAgICAgIG1hbmFnZXI6ICcnLCAvLyDpg6jpl6jnrqHnkIbogIUNCiAgICAgICAgaW50cm9kdWNlOiAnJyAvLyDpg6jpl6jku4vnu40NCiAgICAgIH0sDQogICAgICBydWxlczogew0KICAgICAgICBuYW1lOiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+mDqOmXqOWQjeensOS4jeiDveS4uuepuicsIHRyaWdnZXI6ICdibHVyJyB9LA0KICAgICAgICAgIHsNCiAgICAgICAgICAgIG1pbjogMSwgbWF4OiA1MCwgbWVzc2FnZTogJ+mDqOmXqOWQjeensOS4ujEtNTDkuKrlrZfnrKYnLCB0cmlnZ2VyOiAnYmx1cicNCiAgICAgICAgICB9LCB7DQogICAgICAgICAgICAvLyDlkIznuqfpg6jpl6jkuI3og73lh7rnjrDph43lpI3nmoTpg6jpl6jlkI3np7ANCiAgICAgICAgICAgIHRyaWdnZXI6ICdibHVyJywNCiAgICAgICAgICAgIHZhbGlkYXRvcjogY2hlY2tOYW1lUmVwZWF0DQogICAgICAgICAgfV0sIC8vIOmDqOmXqOWQjeensA0KICAgICAgICBjb2RlOiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+mDqOmXqOe8lueggeS4jeiDveS4uuepuicsIHRyaWdnZXI6ICdibHVyJyB9LCB7DQogICAgICAgICAgbWluOiAxLCBtYXg6IDUwLCBtZXNzYWdlOiAn6YOo6Zeo57yW56CB5Li6MS01MOS4quWtl+espicsIHRyaWdnZXI6ICdibHVyJw0KICAgICAgICB9LCB7DQogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInLA0KICAgICAgICAgIHZhbGlkYXRvcjogY2hlY2tDb2RlUmVwZWF0DQogICAgICAgIH1dLCAvLyDpg6jpl6jnvJbnoIENCiAgICAgICAgbWFuYWdlcjogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfpg6jpl6jotJ/otKPkurrkuI3og73kuLrnqbonLCB0cmlnZ2VyOiAnYmx1cicgfV0sIC8vIOmDqOmXqOeuoeeQhuiAhQ0KICAgICAgICBpbnRyb2R1Y2U6IFt7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6YOo6Zeo5LuL57uN5LiN6IO95Li656m6JywgdHJpZ2dlcjogJ2JsdXInIH0sIHsNCiAgICAgICAgICBtaW46IDEsIG1heDogMzAwLCBtZXNzYWdlOiAn6YOo6Zeo5LuL57uN5Li6MS0zMDDkuKrlrZfnrKYnLCB0cmlnZ2VyOiAnYmx1cicNCiAgICAgICAgfV0gLy8g6YOo6Zeo5LuL57uNDQogICAgICB9LA0KICAgICAgcGVvcGxlczogW10NCiAgICB9DQogIH0sDQogIGNvbXB1dGVkOiB7DQogICAgc2hvd1RpdGxlKCkgew0KICAgICAgcmV0dXJuIHRoaXMuZm9ybURhdGEuaWQgPyAn57yW6L6R6YOo6ZeoJyA6ICfmlrDlop7pg6jpl6gnDQogICAgfQ0KICB9LA0KICBtZXRob2RzOiB7DQogICAgYXN5bmMgZ2V0RW1wbG95ZWVTaW1wbGUoKSB7DQogICAgICB0aGlzLnBlb3BsZXMgPSBhd2FpdCBnZXRFbXBsb3llZVNpbXBsZSgpDQogICAgfSwNCiAgICAvLyDngrnlh7vnoa7lrprml7bop6blj5ENCiAgICBidG5PSygpIHsNCiAgICAgIHRoaXMuJHJlZnMuZGVwdEZvcm0udmFsaWRhdGUoKS50aGVuKCgpID0+IHsNCiAgICAgICAgLy8g5aaC5p6c6L+b5YWldGhlbuihqOekuuagoemqjOaIkOWKnw0KICAgICAgICAvLyDlrZDpg6jpl6jnmoRwaWQg562J5LqO54i26YOo6Zeo55qEaWQNCiAgICAgICAgcmV0dXJuIHRoaXMuZm9ybURhdGEuaWQgPyB1cGRhdGVEZXBhcnRtZW50cyh0aGlzLmZvcm1EYXRhKSA6IGFkZERlcGFydG1lbnRzKHsgLi4udGhpcy5mb3JtRGF0YSwgcGlkOiB0aGlzLnRyZWVOb2RlLmlkIH0pDQogICAgICB9KS50aGVuKCgpID0+IHsNCiAgICAgICAgLy8g5bey57uP5paw5aKe5oiQ5YqfDQogICAgICAgIHRoaXMuJGVtaXQoJ2FkZERlcHRzJykgLy8g6Kem5Y+R6Ieq5a6a5LmJ5LqL5Lu2DQogICAgICAgIC8vIHVwZGF0ZTpwcm9wc+WQjeensA0KICAgICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6c2hvd0RpYWxvZycsIGZhbHNlKSAvLyDop6blj5Hkuovku7YNCiAgICAgIH0pDQogICAgfSwNCiAgICBidG5DYW5jZWwoKSB7DQogICAgICAvLyDlhbPpl63lvLnlsYLkuYvliY0g5bqU6K+lIOmHjee9ruagoemqjCDlubbkuJTov5jljp/mlbDmja4NCiAgICAgIHRoaXMuZm9ybURhdGEgPSB7DQogICAgICAgIG5hbWU6ICcnLCAvLyDpg6jpl6jlkI3np7ANCiAgICAgICAgY29kZTogJycsIC8vIOmDqOmXqOe8lueggQ0KICAgICAgICBtYW5hZ2VyOiAnJywgLy8g6YOo6Zeo566h55CG6ICFDQogICAgICAgIGludHJvZHVjZTogJycgLy8g6YOo6Zeo5LuL57uNDQogICAgICB9DQogICAgICB0aGlzLiRyZWZzLmRlcHRGb3JtLnJlc2V0RmllbGRzKCkgLy8g6YeN572u5pa55rOVDQogICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6c2hvd0RpYWxvZycsIGZhbHNlKQ0KICAgIH0sDQogICAgYXN5bmMgIGdldERlcGFydERldGFpbChpZCkgew0KICAgICAgdGhpcy5mb3JtRGF0YSA9IGF3YWl0IGdldERlcGFydERldGFpbChpZCkNCiAgICB9DQogIH0NCn0NCg=="},{"version":3,"sources":["add-dept.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"add-dept.vue","sourceRoot":"src/views/departments/components","sourcesContent":["<template>\r\n  <el-dialog :title=\"showTitle\" :visible=\"showDialog\" @close=\"btnCancel\">\r\n    <el-form ref=\"deptForm\" :model=\"formData\" :rules=\"rules\" label-width=\"120px\">\r\n      <el-form-item label=\"部门名称\" prop=\"name\">\r\n        <el-input v-model=\"formData.name\" style=\"width:80%\" placeholder=\"1-50个字符\" />\r\n      </el-form-item>\r\n      <el-form-item label=\"部门编码\" prop=\"code\">\r\n        <el-input v-model=\"formData.code\" style=\"width:80%\" placeholder=\"1-50个字符\" />\r\n      </el-form-item>\r\n      <el-form-item label=\"部门负责人\" prop=\"manager\">\r\n        <el-select v-model=\"formData.manager\" style=\"width:80%\" placeholder=\"请选择\" @focus=\"getEmployeeSimple\">\r\n          <!-- 需要循环生成选项   这里做一下简单的处理 显示的是用户名 存的也是用户名-->\r\n          <el-option v-for=\"item in peoples\" :key=\"item.id\" :label=\"item.username\" :value=\"item.username\" />\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"部门介绍\" prop=\"introduce\">\r\n        <el-input v-model=\"formData.introduce\" type=\"textarea\" :rows=\"4\" style=\"width:80%\" placeholder=\"1-50个字符\" />\r\n      </el-form-item>\r\n    </el-form>\r\n    <el-row slot=\"footer\" justify=\"center\" type=\"flex\">\r\n      <el-col :span=\"8\">\r\n        <el-button size=\"small\" @click=\"btnCancel\">取消</el-button>\r\n        <el-button size=\"small\" type=\"primary\" @click=\"btnOK\">确定</el-button>\r\n      </el-col>\r\n    </el-row>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\nimport { getDepartments, addDepartments, getDepartDetail, updateDepartments } from '@/api/departments'\r\nimport { getEmployeeSimple } from '@/api/employees'\r\n\r\nexport default {\r\n  props: {\r\n    showDialog: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    treeNode: {\r\n      type: Object,\r\n      default: null\r\n    }\r\n  },\r\n  data() {\r\n    const checkNameRepeat = async(rule, value, callback) => {\r\n      // 校验逻辑 同级部门不能出现重复的名称\r\n      // 获取最新的组织架构数据\r\n      const { depts } = await getDepartments()\r\n      //  检查重复规则 需要支持两种 新增模式 / 编辑模式\r\n      // depts是所有的部门数据\r\n      // 如何去找技术部所有的子节点\r\n      let isRepeat = false\r\n      if (this.formData.id) {\r\n        // 编辑\r\n        // 找到自己当前部门的所有的同级部门\r\n        isRepeat = depts.filter(item => item.pid === this.formData.pid && item.id !== this.formData.id).some(item => item.name === value)\r\n      } else {\r\n        // 新增场景\r\n        isRepeat = depts.filter(item => item.pid === this.treeNode.id).some(item => item.name === value)\r\n      }\r\n      // depts是所有的数据\r\n      // 市场部所有的子部门的 pid 等于市场部的id  市场部的数据的treeNode.id\r\n      isRepeat ? callback(new Error(`同级部门下已经有${value}这个部门了`)) : callback()\r\n    }\r\n    const checkCodeRepeat = async(rule, value, callback) => {\r\n      // 获取最新的组织架构数据\r\n      const { depts } = await getDepartments()\r\n      let isRepeat = false\r\n      if (this.formData.id) {\r\n        // 编辑\r\n        isRepeat = depts.filter(item => item.id !== this.formData.id).some(item => item.code === value)\r\n      } else {\r\n        isRepeat = depts.some(item => item.code === value) // 只要发现编码重复 就不行\r\n      }\r\n      isRepeat ? callback(new Error(`已经有${value}这个编码了`)) : callback()\r\n    }\r\n    return {\r\n      formData: {\r\n        name: '', // 部门名称\r\n        code: '', // 部门编码\r\n        manager: '', // 部门管理者\r\n        introduce: '' // 部门介绍\r\n      },\r\n      rules: {\r\n        name: [{ required: true, message: '部门名称不能为空', trigger: 'blur' },\r\n          {\r\n            min: 1, max: 50, message: '部门名称为1-50个字符', trigger: 'blur'\r\n          }, {\r\n            // 同级部门不能出现重复的部门名称\r\n            trigger: 'blur',\r\n            validator: checkNameRepeat\r\n          }], // 部门名称\r\n        code: [{ required: true, message: '部门编码不能为空', trigger: 'blur' }, {\r\n          min: 1, max: 50, message: '部门编码为1-50个字符', trigger: 'blur'\r\n        }, {\r\n          trigger: 'blur',\r\n          validator: checkCodeRepeat\r\n        }], // 部门编码\r\n        manager: [{ required: true, message: '部门负责人不能为空', trigger: 'blur' }], // 部门管理者\r\n        introduce: [{ required: true, message: '部门介绍不能为空', trigger: 'blur' }, {\r\n          min: 1, max: 300, message: '部门介绍为1-300个字符', trigger: 'blur'\r\n        }] // 部门介绍\r\n      },\r\n      peoples: []\r\n    }\r\n  },\r\n  computed: {\r\n    showTitle() {\r\n      return this.formData.id ? '编辑部门' : '新增部门'\r\n    }\r\n  },\r\n  methods: {\r\n    async getEmployeeSimple() {\r\n      this.peoples = await getEmployeeSimple()\r\n    },\r\n    // 点击确定时触发\r\n    btnOK() {\r\n      this.$refs.deptForm.validate().then(() => {\r\n        // 如果进入then表示校验成功\r\n        // 子部门的pid 等于父部门的id\r\n        return this.formData.id ? updateDepartments(this.formData) : addDepartments({ ...this.formData, pid: this.treeNode.id })\r\n      }).then(() => {\r\n        // 已经新增成功\r\n        this.$emit('addDepts') // 触发自定义事件\r\n        // update:props名称\r\n        this.$emit('update:showDialog', false) // 触发事件\r\n      })\r\n    },\r\n    btnCancel() {\r\n      // 关闭弹层之前 应该 重置校验 并且还原数据\r\n      this.formData = {\r\n        name: '', // 部门名称\r\n        code: '', // 部门编码\r\n        manager: '', // 部门管理者\r\n        introduce: '' // 部门介绍\r\n      }\r\n      this.$refs.deptForm.resetFields() // 重置方法\r\n      this.$emit('update:showDialog', false)\r\n    },\r\n    async  getDepartDetail(id) {\r\n      this.formData = await getDepartDetail(id)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n"]}]}