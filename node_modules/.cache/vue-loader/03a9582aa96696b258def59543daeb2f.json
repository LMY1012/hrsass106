{"remainingRequest":"C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\src\\views\\employees\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\src\\views\\employees\\index.vue","mtime":1656408758624},{"path":"C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655089562873},{"path":"C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\node_modules\\babel-loader\\lib\\index.js","mtime":1655089564691},{"path":"C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655089562873},{"path":"C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\node_modules\\vue-loader\\lib\\index.js","mtime":1655089565085}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCcNCmltcG9ydCB7IGdldEVtcGxveWVlTGlzdCwgZGVsRW1wbG95ZWUgfSBmcm9tICdAL2FwaS9lbXBsb3llZXMnDQovLyDlvJXlhaXmlrDlop7lkZjlt6UNCmltcG9ydCBBZGRFbXBsb3llZSBmcm9tICcuL2NvbXBvbmVudHMvYWRkLWVtcGxveWVlJw0KLy8g5qC85byP5YyW5pe26Ze0DQppbXBvcnQgeyBmb3JtYXREYXRlIH0gZnJvbSAnQC9maWx0ZXJzJw0KLy8g5qC85byP5YyW6IGY55So5b2i5byPDQppbXBvcnQgRW1wbG95ZWVFbnVtIGZyb20gJ0AvYXBpL2NvbnN0YW50L2VtcGxveWVlcycNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogJ0Rhc2hib2FyZCcsDQogIGNvbXBvbmVudHM6IHsNCiAgICBBZGRFbXBsb3llZQ0KICB9LA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBsb2FkaW5nOiBmYWxzZSwNCiAgICAgIC8vIOaOpeWPl+WRmOW3peaVsOaNrg0KICAgICAgbGlzdDogW10sDQogICAgICBwYWdlOiB7DQogICAgICAgIC8vIOW9k+WJjemhteeggQ0KICAgICAgICBwYWdlOiAxLA0KICAgICAgICAvLyDmr4/pobXmlbDmja7nmoTmlbDph48NCiAgICAgICAgc2l6ZTogMTAsDQogICAgICAgIC8vIOmhtemdouaAu+aVsA0KICAgICAgICB0b3RhbDogMA0KICAgICAgfSwNCiAgICAgIC8vIOaOp+WItuW8ueWHuuWxgg0KICAgICAgc2hvd0RpYWxvZzogZmFsc2UNCiAgICB9DQogIH0sDQogIGNvbXB1dGVkOiB7DQogICAgLi4ubWFwR2V0dGVycyhbDQogICAgICAnbmFtZScNCiAgICBdKQ0KICB9LA0KICBjcmVhdGVkKCkgew0KICAgIHRoaXMuZ2V0RW1wbG95ZWVMaXN0KCkNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGFzeW5jIGdldEVtcGxveWVlTGlzdCgpIHsNCiAgICAgIHRoaXMubG9hZGluZyA9IHRydWUNCiAgICAgIC8vIOiOt+WPluW9k+WJjemhteeggeaVsA0KICAgICAgY29uc3QgeyB0b3RhbCwgcm93cyB9ID0gYXdhaXQgZ2V0RW1wbG95ZWVMaXN0KHRoaXMucGFnZSkNCiAgICAgIHRoaXMucGFnZS50b3RhbCA9IHRvdGFsDQogICAgICB0aGlzLmxpc3QgPSByb3dzDQogICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZQ0KICAgIH0sDQogICAgY2hhbmdlUGFnZShuZXdQYWdlKSB7DQogICAgICB0aGlzLnBhZ2UucGFnZSA9IG5ld1BhZ2UNCiAgICAgIHRoaXMuZ2V0RW1wbG95ZWVMaXN0KCkNCiAgICB9LA0KICAgIC8vIOmhtemdouaVsO+8jOihjOaVsO+8jOiBmOeUqOW9ouW8j++8jA0KICAgIGZvcm1hdEVtcGxveW1lbnQocm93LCBjb2x1bW4sIGNlbGxWYWx1ZSwgaW5kZXgpIHsNCiAgICAgIC8vIOimgeWOu+aJviAx5omA5a+55bqU55qE5YC8DQogICAgICBjb25zdCBvYmogPSBFbXBsb3llZUVudW0uaGlyZVR5cGUuZmluZChpdGVtID0+IGl0ZW0uaWQgPT09IGNlbGxWYWx1ZSkNCiAgICAgIHJldHVybiBvYmogPyBvYmoudmFsdWUgOiAn5pyq55+lJw0KICAgIH0sDQogICAgLy8g5Yig6Zmk5ZGY5belDQogICAgYXN5bmMgZGVsZXRlRW1wbG95ZWUoaWQpIHsNCiAgICAgIHRyeSB7DQogICAgICAgIC8vIOehruiupOa2iOaBrw0KICAgICAgICBhd2FpdCB0aGlzLiRjb25maXJtKCfmgqjnoa7lrprliKDpmaTor6XlkZjlt6XlkJcnKQ0KICAgICAgICAvLyDliKDpmaTkv6Hmga8NCiAgICAgICAgYXdhaXQgZGVsRW1wbG95ZWUoaWQpDQogICAgICAgIC8vIOmHjeaWsOiOt+WPlg0KICAgICAgICB0aGlzLmdldEVtcGxveWVlTGlzdCgpDQogICAgICAgIC8vIOaPkOekuuS/oeaBrw0KICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+WIoOmZpOWRmOW3peaIkOWKnycpDQogICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICBjb25zb2xlLmxvZyhlcnJvcikNCiAgICAgIH0NCiAgICB9LA0KICAgIC8vIOWvvOWHuuaVsOaNrg0KICAgIGV4cG9ydERhdGEoKSB7DQogICAgICAvLyDmh5LliqDovb3mqKHlnZcgPT4g5Y+q5pyJ5b2T54K55Ye75oyJ6ZKu55qE5pe25YCZ5omN5Y675Yqg6L296L+Z5Liq5qih5Z2XDQogICAgICBjb25zdCBoZWFkZXJzID0gew0KICAgICAgICAn5aeT5ZCNJzogJ3VzZXJuYW1lJywNCiAgICAgICAgJ+aJi+acuuWPtyc6ICdtb2JpbGUnLA0KICAgICAgICAn5YWl6IGM5pel5pyfJzogJ3RpbWVPZkVudHJ5JywNCiAgICAgICAgJ+iBmOeUqOW9ouW8jyc6ICdmb3JtT2ZFbXBsb3ltZW50JywNCiAgICAgICAgJ+i9rOato+aXpeacnyc6ICdjb3JyZWN0aW9uVGltZScsDQogICAgICAgICflt6Xlj7cnOiAnd29ya051bWJlcicsDQogICAgICAgICfpg6jpl6gnOiAnZGVwYXJ0bWVudE5hbWUnDQogICAgICB9DQogICAgICBpbXBvcnQoJ0AvdmVuZG9yL0V4cG9ydDJFeGNlbCcpLnRoZW4oYXN5bmMgZXhjZWwgPT4gew0KICAgICAgICAvLyDojrflj5bmiYDmnInnmoTlkZjlt6XliJfooajmlbDmja4NCiAgICAgICAgY29uc3QgeyByb3dzIH0gPSBhd2FpdCBnZXRFbXBsb3llZUxpc3QoeyBwYWdlOiAxLCBzaXplOiB0aGlzLnBhZ2UudG90YWwgfSkNCiAgICAgICAgLy8gcm93c+aYr+aJgOacieeahOWRmOW3peWIl+ihqOaVsOaNrg0KICAgICAgICAvLyBbeyB1c2VybmFtZTogJ+W8oOS4iScsIG1vYmlsZTogMTIzIH1dICA9PiBbWyAn5byg5LiJJywgMTIzIF1dDQogICAgICAgIC8vIOWkjeadguihqOWktA0KICAgICAgICBjb25zdCBtdWx0aUhlYWRlciA9IFtbJ+Wnk+WQjScsICfkuLvopoHkv6Hmga8nLCAnJywgJycsICcnLCAnJywgJ+mDqOmXqCddXQ0KICAgICAgICAvLyDlkIjlubbooYwNCiAgICAgICAgY29uc3QgbWVyZ2VzID0gWydBMTpBMicsICdCMTpGMScsICdHMTpHMiddDQogICAgICAgIC8vIGV4Y2Vs5a+85Ye655qE6buY6K6k5a+56LGhDQogICAgICAgIGV4Y2VsLmV4cG9ydF9qc29uX3RvX2V4Y2VsKHsNCiAgICAgICAgICBmaWxlbmFtZTogJ+S6uuWKm+i1hOa6kOihqCcsDQogICAgICAgICAgaGVhZGVyOiBPYmplY3Qua2V5cyhoZWFkZXJzKSwNCiAgICAgICAgICBkYXRhOiB0aGlzLmZvcm1hdEpTT04oaGVhZGVycywgcm93cyksDQogICAgICAgICAgbXVsdGlIZWFkZXIsIC8vIOWkjeadguihqOWktA0KICAgICAgICAgIG1lcmdlcy8vIOWQiOW5tuihjA0KICAgICAgICB9KQ0KICAgICAgfSkNCiAgICB9LA0KICAgIC8vIFt7IHVzZXJuYW1lOiAn5byg5LiJJywgbW9iaWxlOiAxMjMgfV0gID0+IFtbICflvKDkuIknLCAxMjMgXV0NCiAgICAvLyDmlbDmja7nmoTpobrluo/mmK/mjInnhadoZWFkZXJz5Lita2V555qE6aG65bqP5p2l55qEDQogICAgLy8g5qC85byP5YyWanNvbuaVsOaNrg0KICAgIGZvcm1hdEpTT04oaGVhZGVycywgcm93cykgew0KICAgICAgLy8gcm93cyDmmK/kuIDooYzkuIDooYznmoQgID0+ICBbe30se31dID0+IFtbXSxbXV0NCiAgICAgIHJldHVybiByb3dzLm1hcChpdGVtID0+IHsNCiAgICAgICAgLy8gaXRlbSB7dXNlcm5hbWU6ICflvKDkuIknLCBtb2JpbGU6IDEyM30gIOeOsOWcqOaYr+WvueixoSA9PiBbXQ0KICAgICAgICAvLyBbIuWnk+WQjSIsIuaJi+acuuWPtyJdID0+IFsgJ+W8oOS4iScsICcxMjMnXQ0KICAgICAgICAvLyDop6PliZblvIDkuIDlsYLlkI7vvIzph4zpnaLol4/nmoTmmK97feWvueixoQ0KICAgICAgICByZXR1cm4gT2JqZWN0LmtleXMoaGVhZGVycykubWFwKGtleSA9PiB7DQogICAgICAgICAgLy8g5qC85byP5YyW5pe26Ze0DQogICAgICAgICAgaWYgKGhlYWRlcnNba2V5XSA9PT0gJ3RpbWVPZkVudHJ5JyB8fCBoZWFkZXJzW2tleV0gPT09ICdjb3JyZWN0aW9uVGltZScpIHsNCiAgICAgICAgICAgIHJldHVybiBmb3JtYXREYXRlKGl0ZW1baGVhZGVyc1trZXldXSkNCiAgICAgICAgICB9IGVsc2UgaWYgKGhlYWRlcnNba2V5XSA9PT0gJ2Zvcm1PZkVtcGxveW1lbnQnKSB7DQogICAgICAgICAgICAvLyDmoLzlvI/ljJbogZjnlKjlvaLlvI8NCiAgICAgICAgICAgIC8vIOi/memHjOS8muacieWPmOmHj+mHjeWkjemXrumimA0KICAgICAgICAgICAgY29uc3Qgb2JqID0gRW1wbG95ZWVFbnVtLmhpcmVUeXBlLmZpbmQob2JqID0+IG9iai5pZCA9PT0gaXRlbVtoZWFkZXJzW2tleV1dKQ0KICAgICAgICAgICAgLy8g5a+75om+6IGY55So5b2i5byP5a+55bqU55qE5paH5pys5YaF5a65DQogICAgICAgICAgICByZXR1cm4gb2JqID8gb2JqLnZhbHVlIDogJ+acquefpScNCiAgICAgICAgICB9DQogICAgICAgICAgcmV0dXJuIGl0ZW1baGVhZGVyc1trZXldXQ0KICAgICAgICB9KQ0KICAgICAgfSkNCiAgICB9DQogIH19DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"src/views/employees","sourcesContent":["\r\n<template>\r\n  <div class=\"dashboard-container\">\r\n    <div class=\"app-container\">\r\n      <page-tools :show-before=\"true\">\r\n        <span slot=\"before\">一共有{{ page.total }}条数据</span>\r\n        <template slot=\"after\">\r\n          <el-button size=\"small\" type=\"success\" @click=\"$router.push('/import')\">导入</el-button>\r\n          <el-button size=\"small\" type=\"danger\" @click=\"exportData\">导出</el-button>\r\n          <el-button size=\"small\" type=\"primary\" @click=\"showDialog = true\">新增员工</el-button>\r\n        </template>\r\n      </page-tools>\r\n      <!-- 放置表格和分页 -->\r\n      <el-card v-loading=\"loading\">\r\n        <el-table border :data=\"list\">\r\n          <el-table-column label=\"序号\" sortable=\"\" type=\"index\" />\r\n          <el-table-column label=\"姓名\" sortable=\"\" prop=\"username\" />\r\n          <el-table-column label=\"工号\" sortable=\"\" prop=\"workNumber\" />\r\n          <el-table-column label=\"聘用形式\" sortable=\"\" prop=\"formOfEmployment\" :formatter=\"formatEmployment\" />\r\n\r\n          <el-table-column label=\"部门\" sortable=\"\" prop=\"departmentName\" />\r\n          <el-table-column label=\"入职时间\" sortable=\"\" prop=\"timeOfEntry\" align=\"center\">\r\n            <template slot-scope=\"{ row }\">{{ row.timeOfEntry | formatDate }}</template>\r\n          </el-table-column>\r\n          <el-table-column label=\"账户状态\" align=\"center\" sortable=\"\" prop=\"enableState\">\r\n            <template slot-scope=\"{ row }\">\r\n              <!-- 根据当前状态来确定 是否打开开关 -->\r\n              <el-switch :value=\"row.enableState === 1\" />\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"操作\" sortable=\"\" fixed=\"right\" width=\"280\">\r\n            <template slot-scope=\"{row}\">\r\n              <el-button type=\"text\" size=\"small\" @click=\"$router.push(`/employees/detail/${row.id}`)\">查看</el-button>\r\n              <el-button type=\"text\" size=\"small\">转正</el-button>\r\n              <el-button type=\"text\" size=\"small\">调岗</el-button>\r\n              <el-button type=\"text\" size=\"small\">离职</el-button>\r\n              <el-button type=\"text\" size=\"small\">角色</el-button>\r\n              <el-button type=\"text\" size=\"small\" @click=\"deleteEmployee(row.id)\">删除</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        <!-- 分页组件 -->\r\n        <el-row type=\"flex\" justify=\"center\" align=\"middle\" style=\"height: 60px\">\r\n          <el-pagination\r\n            layout=\"prev, pager, next\"\r\n            :page-size=\"page.size\"\r\n            :current-page=\"page.page\"\r\n            :total=\"page.total\"\r\n            @current-change=\"changePage\"\r\n          />\r\n        </el-row>\r\n      </el-card>\r\n    </div>\r\n    <!--sync修饰符，是子组件去改变父组件数据的一个语法糖  -->\r\n    <add-employee :show-dialog.sync=\"showDialog\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\nimport { getEmployeeList, delEmployee } from '@/api/employees'\r\n// 引入新增员工\r\nimport AddEmployee from './components/add-employee'\r\n// 格式化时间\r\nimport { formatDate } from '@/filters'\r\n// 格式化聘用形式\r\nimport EmployeeEnum from '@/api/constant/employees'\r\nexport default {\r\n  name: 'Dashboard',\r\n  components: {\r\n    AddEmployee\r\n  },\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      // 接受员工数据\r\n      list: [],\r\n      page: {\r\n        // 当前页码\r\n        page: 1,\r\n        // 每页数据的数量\r\n        size: 10,\r\n        // 页面总数\r\n        total: 0\r\n      },\r\n      // 控制弹出层\r\n      showDialog: false\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      'name'\r\n    ])\r\n  },\r\n  created() {\r\n    this.getEmployeeList()\r\n  },\r\n  methods: {\r\n    async getEmployeeList() {\r\n      this.loading = true\r\n      // 获取当前页码数\r\n      const { total, rows } = await getEmployeeList(this.page)\r\n      this.page.total = total\r\n      this.list = rows\r\n      this.loading = false\r\n    },\r\n    changePage(newPage) {\r\n      this.page.page = newPage\r\n      this.getEmployeeList()\r\n    },\r\n    // 页面数，行数，聘用形式，\r\n    formatEmployment(row, column, cellValue, index) {\r\n      // 要去找 1所对应的值\r\n      const obj = EmployeeEnum.hireType.find(item => item.id === cellValue)\r\n      return obj ? obj.value : '未知'\r\n    },\r\n    // 删除员工\r\n    async deleteEmployee(id) {\r\n      try {\r\n        // 确认消息\r\n        await this.$confirm('您确定删除该员工吗')\r\n        // 删除信息\r\n        await delEmployee(id)\r\n        // 重新获取\r\n        this.getEmployeeList()\r\n        // 提示信息\r\n        this.$message.success('删除员工成功')\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    },\r\n    // 导出数据\r\n    exportData() {\r\n      // 懒加载模块 => 只有当点击按钮的时候才去加载这个模块\r\n      const headers = {\r\n        '姓名': 'username',\r\n        '手机号': 'mobile',\r\n        '入职日期': 'timeOfEntry',\r\n        '聘用形式': 'formOfEmployment',\r\n        '转正日期': 'correctionTime',\r\n        '工号': 'workNumber',\r\n        '部门': 'departmentName'\r\n      }\r\n      import('@/vendor/Export2Excel').then(async excel => {\r\n        // 获取所有的员工列表数据\r\n        const { rows } = await getEmployeeList({ page: 1, size: this.page.total })\r\n        // rows是所有的员工列表数据\r\n        // [{ username: '张三', mobile: 123 }]  => [[ '张三', 123 ]]\r\n        // 复杂表头\r\n        const multiHeader = [['姓名', '主要信息', '', '', '', '', '部门']]\r\n        // 合并行\r\n        const merges = ['A1:A2', 'B1:F1', 'G1:G2']\r\n        // excel导出的默认对象\r\n        excel.export_json_to_excel({\r\n          filename: '人力资源表',\r\n          header: Object.keys(headers),\r\n          data: this.formatJSON(headers, rows),\r\n          multiHeader, // 复杂表头\r\n          merges// 合并行\r\n        })\r\n      })\r\n    },\r\n    // [{ username: '张三', mobile: 123 }]  => [[ '张三', 123 ]]\r\n    // 数据的顺序是按照headers中key的顺序来的\r\n    // 格式化json数据\r\n    formatJSON(headers, rows) {\r\n      // rows 是一行一行的  =>  [{},{}] => [[],[]]\r\n      return rows.map(item => {\r\n        // item {username: '张三', mobile: 123}  现在是对象 => []\r\n        // [\"姓名\",\"手机号\"] => [ '张三', '123']\r\n        // 解剖开一层后，里面藏的是{}对象\r\n        return Object.keys(headers).map(key => {\r\n          // 格式化时间\r\n          if (headers[key] === 'timeOfEntry' || headers[key] === 'correctionTime') {\r\n            return formatDate(item[headers[key]])\r\n          } else if (headers[key] === 'formOfEmployment') {\r\n            // 格式化聘用形式\r\n            // 这里会有变量重复问题\r\n            const obj = EmployeeEnum.hireType.find(obj => obj.id === item[headers[key]])\r\n            // 寻找聘用形式对应的文本内容\r\n            return obj ? obj.value : '未知'\r\n          }\r\n          return item[headers[key]]\r\n        })\r\n      })\r\n    }\r\n  }}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n"]}]}