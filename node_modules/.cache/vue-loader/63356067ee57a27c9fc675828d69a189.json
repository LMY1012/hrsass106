{"remainingRequest":"C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\src\\views\\import\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\src\\views\\import\\index.vue","mtime":1656393469806},{"path":"C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655089562873},{"path":"C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\node_modules\\babel-loader\\lib\\index.js","mtime":1655089564691},{"path":"C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655089562873},{"path":"C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\node_modules\\vue-loader\\lib\\index.js","mtime":1655089565085}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBpbXBvcnRFbXBsb3llZSB9IGZyb20gJ0AvYXBpL2VtcGxveWVlcycNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbWV0aG9kczogew0KICAgIGFzeW5jICBzdWNjZXNzKHsgaGVhZGVyLCByZXN1bHRzIH0pIHsNCiAgICAgIC8vIGhlYWRlcuWSjHJlc3VsdHPkuK3nmoTmlbDmja7pg73mmK/kuK3mlocNCiAgICAgIC8vIOimgeS4juaWsOWinuWRmOW3peWxnuaAp+aYr+S4gOiHtOeahA0KICAgICAgY29uc3QgdXNlclJlbGF0aW9ucyA9IHsNCiAgICAgICAgJ+WFpeiBjOaXpeacnyc6ICd0aW1lT2ZFbnRyeScsDQogICAgICAgICfmiYvmnLrlj7cnOiAnbW9iaWxlJywNCiAgICAgICAgJ+Wnk+WQjSc6ICd1c2VybmFtZScsDQogICAgICAgICfovazmraPml6XmnJ8nOiAnY29ycmVjdGlvblRpbWUnLA0KICAgICAgICAn5bel5Y+3JzogJ3dvcmtOdW1iZXInDQogICAgICB9DQoNCiAgICAgIC8vIOaWueazlTENCiAgICAgIC8vIOWumuS5ieS4gOS4quaWsOaVsOe7hA0KICAgICAgLy8gY29uc3QgYXJyID0gW10NCiAgICAgIC8vIC8vIOmBjeWOhuiOt+WPlueahHJlc3VsdHPmlbDnu4QNCiAgICAgIC8vIHJlc3VsdHMuZm9yRWFjaChpdGVtID0+IHsNCiAgICAgIC8vICAgLy8g5a6a5LmJ5LiA5Liq5a+56LGh5o6l5pS25b6q546v5pWw57uE55qE5YaF5a65DQogICAgICAvLyAgIGNvbnN0IHVzZXJJbmZvID0ge30NCiAgICAgIC8vICAgLy8g5b6q546v5pWw57uE5YaF5a65DQogICAgICAvLyAgIE9iamVjdC5rZXlzKGl0ZW0pLmZvckVhY2goa2V5ID0+IHsNCiAgICAgIC8vICAgICAvLyDlsIblhoXlrrnotYvlgLznu5nlr7nosaENCiAgICAgIC8vICAgICB1c2VySW5mb1t1c2VyUmVsYXRpb25zW2tleV1dID0gaXRlbVtrZXldDQogICAgICAvLyAgIH0pDQogICAgICAvLyAgIC8vIOWKoOWFpeaVsOe7hA0KICAgICAgLy8gICBhcnIucHVzaCh1c2VySW5mbykNCiAgICAgIC8vIH0pDQoNCiAgICAgIC8vIOaWueazleS6jA0KICAgICAgdmFyIG5ld0FyciA9IHJlc3VsdHMubWFwKGl0ZW0gPT4gew0KICAgICAgICB2YXIgdXNlckluZm8gPSB7fQ0KICAgICAgICBPYmplY3Qua2V5cyhpdGVtKS5mb3JFYWNoKGtleSA9PiB7DQogICAgICAgICAgaWYgKHVzZXJSZWxhdGlvbnNba2V5XSA9PT0gJ3RpbWVPZkVudHJ5JyB8fCB1c2VyUmVsYXRpb25zW2tleV0gPT09ICdjb3JyZWN0aW9uVGltZScpIHsNCiAgICAgICAgICAgIC8vIOWQjuerr+aOpeWPo+mZkOWItu+8jOS4jeiDveaYr+Wtl+espuS4siDopoHmsYLovazljJbkuLrml7bpl7Tnsbsg5Y+q5pyJ6L+Z5qC35omN6IO95a2Y5YWl5pWw5o2u5bqTDQogICAgICAgICAgICB1c2VySW5mb1t1c2VyUmVsYXRpb25zW2tleV1dID0gbmV3IERhdGUodGhpcy5mb3JtYXREYXRlKGl0ZW1ba2V5XSkpDQogICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIHVzZXJJbmZvW3VzZXJSZWxhdGlvbnNba2V5XV0gPSBpdGVtW2tleV0NCiAgICAgICAgICB9DQogICAgICAgIH0pDQogICAgICAgIHJldHVybiB1c2VySW5mbw0KICAgICAgfSkNCg0KICAgICAgYXdhaXQgaW1wb3J0RW1wbG95ZWUobmV3QXJyKSAvLyDosIPnlKjlr7zlhaXmjqXlj6PvvIzmjqXmlLbkuIDkuKrmlbDnu4QNCiAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn5a+85YWl5oiQ5YqfJykNCiAgICAgIHRoaXMuJHJvdXRlci5iYWNrKCkvLyDov5Tlm57liLDkuIrkuIDpobXpnaINCiAgICB9LA0KICAgIC8vIOaXtumXtOagvOW8j+WMlg0KICAgIGZvcm1hdERhdGUobnVtYiwgZm9ybWF0KSB7DQogICAgICBjb25zdCB0aW1lID0gbmV3IERhdGUoKG51bWIgLSAxKSAqIDI0ICogMzYwMDAwMCArIDEpDQogICAgICB0aW1lLnNldFllYXIodGltZS5nZXRGdWxsWWVhcigpIC0gNzApDQogICAgICBjb25zdCB5ZWFyID0gdGltZS5nZXRGdWxsWWVhcigpICsgJycNCiAgICAgIGNvbnN0IG1vbnRoID0gdGltZS5nZXRNb250aCgpICsgMSArICcnDQogICAgICBjb25zdCBkYXRlID0gdGltZS5nZXREYXRlKCkgKyAnJw0KICAgICAgaWYgKGZvcm1hdCAmJiBmb3JtYXQubGVuZ3RoID09PSAxKSB7DQogICAgICAgIHJldHVybiB5ZWFyICsgZm9ybWF0ICsgbW9udGggKyBmb3JtYXQgKyBkYXRlDQogICAgICB9DQogICAgICByZXR1cm4geWVhciArIChtb250aCA8IDEwID8gJzAnICsgbW9udGggOiBtb250aCkgKyAoZGF0ZSA8IDEwID8gJzAnICsgZGF0ZSA6IGRhdGUpDQogICAgfQ0KDQogIH19DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"index.vue","sourceRoot":"src/views/import","sourcesContent":["<template>\r\n  <!-- 公共导入组件 -->\r\n  <upload-excel :on-success=\"success\" />\r\n</template>\r\n\r\n<script>\r\nimport { importEmployee } from '@/api/employees'\r\nexport default {\r\n  methods: {\r\n    async  success({ header, results }) {\r\n      // header和results中的数据都是中文\r\n      // 要与新增员工属性是一致的\r\n      const userRelations = {\r\n        '入职日期': 'timeOfEntry',\r\n        '手机号': 'mobile',\r\n        '姓名': 'username',\r\n        '转正日期': 'correctionTime',\r\n        '工号': 'workNumber'\r\n      }\r\n\r\n      // 方法1\r\n      // 定义一个新数组\r\n      // const arr = []\r\n      // // 遍历获取的results数组\r\n      // results.forEach(item => {\r\n      //   // 定义一个对象接收循环数组的内容\r\n      //   const userInfo = {}\r\n      //   // 循环数组内容\r\n      //   Object.keys(item).forEach(key => {\r\n      //     // 将内容赋值给对象\r\n      //     userInfo[userRelations[key]] = item[key]\r\n      //   })\r\n      //   // 加入数组\r\n      //   arr.push(userInfo)\r\n      // })\r\n\r\n      // 方法二\r\n      var newArr = results.map(item => {\r\n        var userInfo = {}\r\n        Object.keys(item).forEach(key => {\r\n          if (userRelations[key] === 'timeOfEntry' || userRelations[key] === 'correctionTime') {\r\n            // 后端接口限制，不能是字符串 要求转化为时间类 只有这样才能存入数据库\r\n            userInfo[userRelations[key]] = new Date(this.formatDate(item[key]))\r\n          } else {\r\n            userInfo[userRelations[key]] = item[key]\r\n          }\r\n        })\r\n        return userInfo\r\n      })\r\n\r\n      await importEmployee(newArr) // 调用导入接口，接收一个数组\r\n      this.$message.success('导入成功')\r\n      this.$router.back()// 返回到上一页面\r\n    },\r\n    // 时间格式化\r\n    formatDate(numb, format) {\r\n      const time = new Date((numb - 1) * 24 * 3600000 + 1)\r\n      time.setYear(time.getFullYear() - 70)\r\n      const year = time.getFullYear() + ''\r\n      const month = time.getMonth() + 1 + ''\r\n      const date = time.getDate() + ''\r\n      if (format && format.length === 1) {\r\n        return year + format + month + format + date\r\n      }\r\n      return year + (month < 10 ? '0' + month : month) + (date < 10 ? '0' + date : date)\r\n    }\r\n\r\n  }}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n"]}]}