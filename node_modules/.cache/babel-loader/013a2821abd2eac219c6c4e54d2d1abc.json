{"remainingRequest":"C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\src\\views\\import\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\src\\views\\import\\index.vue","mtime":1656393469806},{"path":"C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\babel.config.js","mtime":1655089325320},{"path":"C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655089562873},{"path":"C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\node_modules\\babel-loader\\lib\\index.js","mtime":1655089564691},{"path":"C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655089562873},{"path":"C:\\Users\\陌上花开，可缓缓归归矣\\Desktop\\hrsaas\\node_modules\\vue-loader\\lib\\index.js","mtime":1655089565085}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiQzovVXNlcnMvXHU5NjRDXHU0RTBBXHU4MkIxXHU1RjAwXHVGRjBDXHU1M0VGXHU3RjEzXHU3RjEzXHU1RjUyXHU1RjUyXHU3N0UzL0Rlc2t0b3AvaHJzYWFzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9yZWdlbmVyYXRvclJ1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQzovVXNlcnMvXHU5NjRDXHU0RTBBXHU4MkIxXHU1RjAwXHVGRjBDXHU1M0VGXHU3RjEzXHU3RjEzXHU1RjUyXHU1RjUyXHU3N0UzL0Rlc2t0b3AvaHJzYWFzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cy5qcyI7Ci8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IGltcG9ydEVtcGxveWVlIH0gZnJvbSAnQC9hcGkvZW1wbG95ZWVzJzsKZXhwb3J0IGRlZmF1bHQgewogIG1ldGhvZHM6IHsKICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIHN1Y2Nlc3MoX3JlZikgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZSgpLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgaGVhZGVyLCByZXN1bHRzLCB1c2VyUmVsYXRpb25zLCBuZXdBcnI7CiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUoKS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgaGVhZGVyID0gX3JlZi5oZWFkZXIsIHJlc3VsdHMgPSBfcmVmLnJlc3VsdHM7CiAgICAgICAgICAgICAgICAvLyBoZWFkZXLlkoxyZXN1bHRz5Lit55qE5pWw5o2u6YO95piv5Lit5paHCiAgICAgICAgICAgICAgICAvLyDopoHkuI7mlrDlop7lkZjlt6XlsZ7mgKfmmK/kuIDoh7TnmoQKICAgICAgICAgICAgICAgIHVzZXJSZWxhdGlvbnMgPSB7CiAgICAgICAgICAgICAgICAgICflhaXogYzml6XmnJ8nOiAndGltZU9mRW50cnknLAogICAgICAgICAgICAgICAgICAn5omL5py65Y+3JzogJ21vYmlsZScsCiAgICAgICAgICAgICAgICAgICflp5PlkI0nOiAndXNlcm5hbWUnLAogICAgICAgICAgICAgICAgICAn6L2s5q2j5pel5pyfJzogJ2NvcnJlY3Rpb25UaW1lJywKICAgICAgICAgICAgICAgICAgJ+W3peWPtyc6ICd3b3JrTnVtYmVyJwogICAgICAgICAgICAgICAgfTsgLy8g5pa55rOVMQogICAgICAgICAgICAgICAgLy8g5a6a5LmJ5LiA5Liq5paw5pWw57uECiAgICAgICAgICAgICAgICAvLyBjb25zdCBhcnIgPSBbXQogICAgICAgICAgICAgICAgLy8gLy8g6YGN5Y6G6I635Y+W55qEcmVzdWx0c+aVsOe7hAogICAgICAgICAgICAgICAgLy8gcmVzdWx0cy5mb3JFYWNoKGl0ZW0gPT4gewogICAgICAgICAgICAgICAgLy8gICAvLyDlrprkuYnkuIDkuKrlr7nosaHmjqXmlLblvqrnjq/mlbDnu4TnmoTlhoXlrrkKICAgICAgICAgICAgICAgIC8vICAgY29uc3QgdXNlckluZm8gPSB7fQogICAgICAgICAgICAgICAgLy8gICAvLyDlvqrnjq/mlbDnu4TlhoXlrrkKICAgICAgICAgICAgICAgIC8vICAgT2JqZWN0LmtleXMoaXRlbSkuZm9yRWFjaChrZXkgPT4gewogICAgICAgICAgICAgICAgLy8gICAgIC8vIOWwhuWGheWuuei1i+WAvOe7meWvueixoQogICAgICAgICAgICAgICAgLy8gICAgIHVzZXJJbmZvW3VzZXJSZWxhdGlvbnNba2V5XV0gPSBpdGVtW2tleV0KICAgICAgICAgICAgICAgIC8vICAgfSkKICAgICAgICAgICAgICAgIC8vICAgLy8g5Yqg5YWl5pWw57uECiAgICAgICAgICAgICAgICAvLyAgIGFyci5wdXNoKHVzZXJJbmZvKQogICAgICAgICAgICAgICAgLy8gfSkKICAgICAgICAgICAgICAgIC8vIOaWueazleS6jAoKICAgICAgICAgICAgICAgIG5ld0FyciA9IHJlc3VsdHMubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgICAgICAgIHZhciB1c2VySW5mbyA9IHt9OwogICAgICAgICAgICAgICAgICBPYmplY3Qua2V5cyhpdGVtKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICAgICAgICAgICAgICBpZiAodXNlclJlbGF0aW9uc1trZXldID09PSAndGltZU9mRW50cnknIHx8IHVzZXJSZWxhdGlvbnNba2V5XSA9PT0gJ2NvcnJlY3Rpb25UaW1lJykgewogICAgICAgICAgICAgICAgICAgICAgLy8g5ZCO56uv5o6l5Y+j6ZmQ5Yi277yM5LiN6IO95piv5a2X56ym5LiyIOimgeaxgui9rOWMluS4uuaXtumXtOexuyDlj6rmnInov5nmoLfmiY3og73lrZjlhaXmlbDmja7lupMKICAgICAgICAgICAgICAgICAgICAgIHVzZXJJbmZvW3VzZXJSZWxhdGlvbnNba2V5XV0gPSBuZXcgRGF0ZShfdGhpcy5mb3JtYXREYXRlKGl0ZW1ba2V5XSkpOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICB1c2VySW5mb1t1c2VyUmVsYXRpb25zW2tleV1dID0gaXRlbVtrZXldOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIHJldHVybiB1c2VySW5mbzsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gaW1wb3J0RW1wbG95ZWUobmV3QXJyKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgLy8g6LCD55So5a+85YWl5o6l5Y+j77yM5o6l5pS25LiA5Liq5pWw57uECiAgICAgICAgICAgICAgICBfdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCflr7zlhaXmiJDlip8nKTsKCiAgICAgICAgICAgICAgICBfdGhpcy4kcm91dGVyLmJhY2soKTsgLy8g6L+U5Zue5Yiw5LiK5LiA6aG16Z2iCgoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy8g5pe26Ze05qC85byP5YyWCiAgICBmb3JtYXREYXRlOiBmdW5jdGlvbiBmb3JtYXREYXRlKG51bWIsIGZvcm1hdCkgewogICAgICB2YXIgdGltZSA9IG5ldyBEYXRlKChudW1iIC0gMSkgKiAyNCAqIDM2MDAwMDAgKyAxKTsKICAgICAgdGltZS5zZXRZZWFyKHRpbWUuZ2V0RnVsbFllYXIoKSAtIDcwKTsKICAgICAgdmFyIHllYXIgPSB0aW1lLmdldEZ1bGxZZWFyKCkgKyAnJzsKICAgICAgdmFyIG1vbnRoID0gdGltZS5nZXRNb250aCgpICsgMSArICcnOwogICAgICB2YXIgZGF0ZSA9IHRpbWUuZ2V0RGF0ZSgpICsgJyc7CgogICAgICBpZiAoZm9ybWF0ICYmIGZvcm1hdC5sZW5ndGggPT09IDEpIHsKICAgICAgICByZXR1cm4geWVhciArIGZvcm1hdCArIG1vbnRoICsgZm9ybWF0ICsgZGF0ZTsKICAgICAgfQoKICAgICAgcmV0dXJuIHllYXIgKyAobW9udGggPCAxMCA/ICcwJyArIG1vbnRoIDogbW9udGgpICsgKGRhdGUgPCAxMCA/ICcwJyArIGRhdGUgOiBkYXRlKTsKICAgIH0KICB9Cn07"},{"version":3,"mappings":";;;;;;;;;;;AAMA;AACA;EACAA;IACAC,OADA,yBACA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAAC;gBACA;gBACA;gBACAC,aAHA,GAGA;kBACA,qBADA;kBAEA,eAFA;kBAGA,gBAHA;kBAIA,wBAJA;kBAKA;gBALA,CAHA,EAWA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBAEA;;gBACAC,MA5BA,GA4BAC;kBACA;kBACAC;oBACA;sBACA;sBACAC;oBACA,CAHA,MAGA;sBACAA;oBACA;kBACA,CAPA;kBAQA;gBACA,CAXA,CA5BA;gBAAA;gBAAA,OAyCAC,sBAzCA;;cAAA;gBAyCA;gBACA;;gBACA,qBA3CA,CA2CA;;;cA3CA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IA4CA,CA7CA;IA8CA;IACAC,UA/CA,sBA+CAC,IA/CA,EA+CAC,MA/CA,EA+CA;MACA;MACAC;MACA;MACA;MACA;;MACA;QACA;MACA;;MACA;IACA;EAzDA;AADA","names":["methods","success","header","userRelations","newArr","results","Object","userInfo","importEmployee","formatDate","numb","format","time"],"sourceRoot":"src/views/import","sources":["index.vue"],"sourcesContent":["<template>\r\n  <!-- 公共导入组件 -->\r\n  <upload-excel :on-success=\"success\" />\r\n</template>\r\n\r\n<script>\r\nimport { importEmployee } from '@/api/employees'\r\nexport default {\r\n  methods: {\r\n    async  success({ header, results }) {\r\n      // header和results中的数据都是中文\r\n      // 要与新增员工属性是一致的\r\n      const userRelations = {\r\n        '入职日期': 'timeOfEntry',\r\n        '手机号': 'mobile',\r\n        '姓名': 'username',\r\n        '转正日期': 'correctionTime',\r\n        '工号': 'workNumber'\r\n      }\r\n\r\n      // 方法1\r\n      // 定义一个新数组\r\n      // const arr = []\r\n      // // 遍历获取的results数组\r\n      // results.forEach(item => {\r\n      //   // 定义一个对象接收循环数组的内容\r\n      //   const userInfo = {}\r\n      //   // 循环数组内容\r\n      //   Object.keys(item).forEach(key => {\r\n      //     // 将内容赋值给对象\r\n      //     userInfo[userRelations[key]] = item[key]\r\n      //   })\r\n      //   // 加入数组\r\n      //   arr.push(userInfo)\r\n      // })\r\n\r\n      // 方法二\r\n      var newArr = results.map(item => {\r\n        var userInfo = {}\r\n        Object.keys(item).forEach(key => {\r\n          if (userRelations[key] === 'timeOfEntry' || userRelations[key] === 'correctionTime') {\r\n            // 后端接口限制，不能是字符串 要求转化为时间类 只有这样才能存入数据库\r\n            userInfo[userRelations[key]] = new Date(this.formatDate(item[key]))\r\n          } else {\r\n            userInfo[userRelations[key]] = item[key]\r\n          }\r\n        })\r\n        return userInfo\r\n      })\r\n\r\n      await importEmployee(newArr) // 调用导入接口，接收一个数组\r\n      this.$message.success('导入成功')\r\n      this.$router.back()// 返回到上一页面\r\n    },\r\n    // 时间格式化\r\n    formatDate(numb, format) {\r\n      const time = new Date((numb - 1) * 24 * 3600000 + 1)\r\n      time.setYear(time.getFullYear() - 70)\r\n      const year = time.getFullYear() + ''\r\n      const month = time.getMonth() + 1 + ''\r\n      const date = time.getDate() + ''\r\n      if (format && format.length === 1) {\r\n        return year + format + month + format + date\r\n      }\r\n      return year + (month < 10 ? '0' + month : month) + (date < 10 ? '0' + date : date)\r\n    }\r\n\r\n  }}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n"]}]}